{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Red Hat OpenShift on IBM Cloud sales enablement lab This lab is divided into multiple sections or chapters. After learning about the associated certification process and prerequisites to the lab, you will dive right into the Lab Guide and get started learning more about Red Hat OpenShift. Use the table of contents at the left-hand side of this page to navigate each section, or simply use the \"Next\" link at the bottom of each page to continue. Note THIS NEEDS UPDATING!!! Note, you can access this demonstration environment at any time via IBM Tech Zone https://techzone.ibm.com/collection/se-l3-ibm-cloud-satellite . Once you are comfortable with the environment, it can quickly and easily be leveraged for customer demonstrations. In most cases, depending on your audience, the Deploy an OpenShift application section will be most appropriate for customer demonstrations. THIS NEEDS UPDATING!!! You can also leverage the IBM Cloud Satellite collection here for longer client demonstrations or proof-of-concepts. Be aware, additional provisioning time and manual configurations are required. Refer to the documentation in the collection. Helpful tips for using this demonstration environment This demonstration script is organized in parts and chapters. Most chapters contain numbered steps, which are typically actions that you will perform. Throughout the lab, you will see images that are examples of what you should be seeing during the step. In some instances, you will see the following styles of highlighting in those images: Action highlight box: Illustrates where you should click, enter, or select an item: Path/explore highlight box: Illustrates one of two things: the path to follow to get to a specific location in the user interface areas to explore on your own Copy to clipboard box: Text that is copied to your clipboard. Click the copy icon (highlighted below) and then paste using your operating systems paste function, for example, entering Ctrl +v , Cmd +v , or right click and select paste.","title":"Welcome to the Red Hat OpenShift on IBM Cloud sales enablement lab"},{"location":"#welcome-to-the-red-hat-openshift-on-ibm-cloud-sales-enablement-lab","text":"This lab is divided into multiple sections or chapters. After learning about the associated certification process and prerequisites to the lab, you will dive right into the Lab Guide and get started learning more about Red Hat OpenShift. Use the table of contents at the left-hand side of this page to navigate each section, or simply use the \"Next\" link at the bottom of each page to continue. Note THIS NEEDS UPDATING!!! Note, you can access this demonstration environment at any time via IBM Tech Zone https://techzone.ibm.com/collection/se-l3-ibm-cloud-satellite . Once you are comfortable with the environment, it can quickly and easily be leveraged for customer demonstrations. In most cases, depending on your audience, the Deploy an OpenShift application section will be most appropriate for customer demonstrations. THIS NEEDS UPDATING!!! You can also leverage the IBM Cloud Satellite collection here for longer client demonstrations or proof-of-concepts. Be aware, additional provisioning time and manual configurations are required. Refer to the documentation in the collection.","title":"Welcome to the Red Hat OpenShift on IBM Cloud sales enablement lab"},{"location":"#helpful-tips-for-using-this-demonstration-environment","text":"This demonstration script is organized in parts and chapters. Most chapters contain numbered steps, which are typically actions that you will perform. Throughout the lab, you will see images that are examples of what you should be seeing during the step. In some instances, you will see the following styles of highlighting in those images: Action highlight box: Illustrates where you should click, enter, or select an item: Path/explore highlight box: Illustrates one of two things: the path to follow to get to a specific location in the user interface areas to explore on your own Copy to clipboard box: Text that is copied to your clipboard. Click the copy icon (highlighted below) and then paste using your operating systems paste function, for example, entering Ctrl +v , Cmd +v , or right click and select paste.","title":"Helpful tips for using this demonstration environment"},{"location":"certification/","text":"IMPORTANT For IBMers and Business Partners to receive credit for completing this lab, you must pass a certification quiz after completing the hands-on portion of the course. The quiz consists of 5 multiple choice questions, with four possible responses (and only one correct answer) for each question. The quiz questions will ask you about on-screen text or descriptions that will come up as you work through the lab guide. You will be prompted in the lab guide instructions to record this information (or screenshot \u2014 your preference) like below: Record this! This is an example of the callout you will see to record information that will help you pass the certification quiz. So that you can easily breeze through the certification quiz questions at the end, be sure and capture the specified text or image.","title":"Certification"},{"location":"objectives/","text":"Lab objectives Designed for sellers and business partners, this hands-on lab will familiarize you with the OpenShift Container Platform (OCP) v4.X on IBM Cloud infrastructure by putting you in the shoes of both an Administrator and a Developer. Throughout the course of the lab, you will: Utilize the Red Hat OpenShift Container Platform web console to perform basic operations. Deploy a sample application from the Red Hat OpenShift Container Platform web console. Simulate node failures to test cluster resiliency and load balancing capabilities. You will need an estimated 60-90 minutes to complete this lab. Keep this in mind when requesting access to the shared OpenShift v4.X cluster from the IBM Technology Zone (ITZ) during the Prerequisites stage of this lab. Important Reserve only for the time you need. This is a finite resource and limiting your reservation time ensures more IBMers can leverage the resources for their client engagements. Thank you!","title":"Lab objectives"},{"location":"objectives/#lab-objectives","text":"Designed for sellers and business partners, this hands-on lab will familiarize you with the OpenShift Container Platform (OCP) v4.X on IBM Cloud infrastructure by putting you in the shoes of both an Administrator and a Developer. Throughout the course of the lab, you will: Utilize the Red Hat OpenShift Container Platform web console to perform basic operations. Deploy a sample application from the Red Hat OpenShift Container Platform web console. Simulate node failures to test cluster resiliency and load balancing capabilities. You will need an estimated 60-90 minutes to complete this lab. Keep this in mind when requesting access to the shared OpenShift v4.X cluster from the IBM Technology Zone (ITZ) during the Prerequisites stage of this lab. Important Reserve only for the time you need. This is a finite resource and limiting your reservation time ensures more IBMers can leverage the resources for their client engagements. Thank you!","title":"Lab objectives"},{"location":"prerequisites/","text":"What you will need Please ensure you\u2019ve prepared and reviewed the following before embarking on this lab: A web browser Sign up for an IBMID on IBM Cloud (this will be linked with your w3ID if you are an IBMer) Request access to the IBM Technology Zone (ITZ) Note You must agree to the terms and conditions of theenvironment to use these resources.","title":"Prerequisites"},{"location":"prerequisites/#what-you-will-need","text":"Please ensure you\u2019ve prepared and reviewed the following before embarking on this lab: A web browser Sign up for an IBMID on IBM Cloud (this will be linked with your w3ID if you are an IBMer) Request access to the IBM Technology Zone (ITZ) Note You must agree to the terms and conditions of theenvironment to use these resources.","title":"What you will need"},{"location":"summary/","text":"Congratulations You have created multiple containerized applications and configured network balancing across them. While this barely scratches the surface of the things you can achieve with Red Hat OpenShift, we hope it gave you a valuable taste of what\u2019s possible for you and your clients. WE SHOULD ADD A PLULG HERE FOR OUR LEARNING PLANS!!! If you have additional questions or opportunities you\u2019d like to discuss with the author, please feel free to reach out.","title":"Summary"},{"location":"summary/#congratulations","text":"You have created multiple containerized applications and configured network balancing across them. While this barely scratches the surface of the things you can achieve with Red Hat OpenShift, we hope it gave you a valuable taste of what\u2019s possible for you and your clients. WE SHOULD ADD A PLULG HERE FOR OUR LEARNING PLANS!!! If you have additional questions or opportunities you\u2019d like to discuss with the author, please feel free to reach out.","title":"Congratulations"},{"location":"labguide/balancingNetworkTraffic/","text":"Balancing network traffic In this section, you will create a route to balance network traffic between our two deployed applications. Change to the Administrator perspective. Verify the Project selected is your project. If it is not, click the pulldown and select your project. Click Networking in the left-hand taskbar. Click Routes in the Networking sub-menu. Click Create Route . Configure the following properties: Name: nginx-route Service: nginx-server-1 Click on + Add Alternate Service and update with: Weight: 50 Alternative Service Target: nginx-server-2 Alternative Service Weight: 50 Target Port: 8080->8080 Click Create . Once the route is created, your web browser will redirect to the details page of the newly created route. Record the Location (URL) of the nginx-route . The default OpenShift load balancer is used to distribute incoming requests sent to the route's Location URL. In the next section you will see this in action.","title":"Balancing Network Traffic"},{"location":"labguide/balancingNetworkTraffic/#balancing-network-traffic","text":"In this section, you will create a route to balance network traffic between our two deployed applications. Change to the Administrator perspective. Verify the Project selected is your project. If it is not, click the pulldown and select your project. Click Networking in the left-hand taskbar. Click Routes in the Networking sub-menu. Click Create Route . Configure the following properties: Name: nginx-route Service: nginx-server-1 Click on + Add Alternate Service and update with: Weight: 50 Alternative Service Target: nginx-server-2 Alternative Service Weight: 50 Target Port: 8080->8080 Click Create . Once the route is created, your web browser will redirect to the details page of the newly created route. Record the Location (URL) of the nginx-route . The default OpenShift load balancer is used to distribute incoming requests sent to the route's Location URL. In the next section you will see this in action.","title":"Balancing network traffic"},{"location":"labguide/checkDeploymentStatus/","text":"Check deployment Status The OpenShift web console provides valuable information about the status of everything running in the OpenShift cluster. In the next section, learn how to access some of the information about the NGINX container image you just deployed. Return to the OpenShift web console tab/window of your web browser and select Topology from the left-hand taskbar. Click the center of the deployment icon to display the deployment side bar containing the deployment details. Click the Resources tab in the deployment sidebar. Record this! Record the Service port and Pod Port numbers displayed under the Resources tab. From the displayed list of Pods , note how many containers have the Running status. You should see only one at this time. OpenShift leverages the Kubernetes concept of a pod , which is one or more containers deployed together on one host, and is the smallest compute unit that can be defined, deployed, and managed. Learn more You can learn more about the OpenShift and Kubernetes terms and concepts discussed in this lab. Check out these helpful sections of the OpenShift documentation: Projects and Users Containers and Images Deployments Pods and Services Take note of the pod name , then click on the name to view more details. Click on the Details tab (default page). Scroll down the Details tab and record the IP Addresss and Restart Policy for the pod. Record this! Record the IP Address and Restart Policy for your pod. Click the Terminal tab. Click inside the Terminal window (black box with a prompt like sh-4.2$ ). The Terminal window allows you to issue commands directly to the operating system that is running in the container you deployed using the NGINX image. This image is running a customized Linux operating system. Discover the hostname of your NGINX server, by running the hostname command. hostname Example output sh-4.2$ hostname nginx-sample-869bf677b6-7wnzs sh-4.2$ Discover the IP address of the running container for your NGINX server, by running the hostname -i command. hostname -i Example output sh-4.2$ hostname -i 172.30.234.2 sh-4.2$ Later in this lab you will deploy another NGINX web server and create a load balancer to distribute requests between the two web servers. To make it easier to identify which web server is being access, change the content that is displayed when you access this server. Issue the following commands in the Terminal to modify the web server's default page. You will first create a backup copy of the original file in case you want to revert back to it later. cp index.html index.html.orig echo \"NGINX Server 1 works!\" > index.html ls Example output sh-4.2$ cp index.html index.html.orig sh-4.2$ echo NGINX Server 1 works! > index.html sh-4.2$ ls README.md index.html index.html.orig nginx-start openshift sh-4.2$ Click Topology in left-hand task bar of OpenShift web console. Click the Open URL button on the edge of the deployment icon. This will launch as a new tab or window in your web browser. You should now see the default page for the web server displays the new message: NGINX Server 1 works! In the next section learn about OpenShift pod resiliency.","title":"Check Deployment Status"},{"location":"labguide/checkDeploymentStatus/#check-deployment-status","text":"The OpenShift web console provides valuable information about the status of everything running in the OpenShift cluster. In the next section, learn how to access some of the information about the NGINX container image you just deployed. Return to the OpenShift web console tab/window of your web browser and select Topology from the left-hand taskbar. Click the center of the deployment icon to display the deployment side bar containing the deployment details. Click the Resources tab in the deployment sidebar. Record this! Record the Service port and Pod Port numbers displayed under the Resources tab. From the displayed list of Pods , note how many containers have the Running status. You should see only one at this time. OpenShift leverages the Kubernetes concept of a pod , which is one or more containers deployed together on one host, and is the smallest compute unit that can be defined, deployed, and managed. Learn more You can learn more about the OpenShift and Kubernetes terms and concepts discussed in this lab. Check out these helpful sections of the OpenShift documentation: Projects and Users Containers and Images Deployments Pods and Services Take note of the pod name , then click on the name to view more details. Click on the Details tab (default page). Scroll down the Details tab and record the IP Addresss and Restart Policy for the pod. Record this! Record the IP Address and Restart Policy for your pod. Click the Terminal tab. Click inside the Terminal window (black box with a prompt like sh-4.2$ ). The Terminal window allows you to issue commands directly to the operating system that is running in the container you deployed using the NGINX image. This image is running a customized Linux operating system. Discover the hostname of your NGINX server, by running the hostname command. hostname Example output sh-4.2$ hostname nginx-sample-869bf677b6-7wnzs sh-4.2$ Discover the IP address of the running container for your NGINX server, by running the hostname -i command. hostname -i Example output sh-4.2$ hostname -i 172.30.234.2 sh-4.2$ Later in this lab you will deploy another NGINX web server and create a load balancer to distribute requests between the two web servers. To make it easier to identify which web server is being access, change the content that is displayed when you access this server. Issue the following commands in the Terminal to modify the web server's default page. You will first create a backup copy of the original file in case you want to revert back to it later. cp index.html index.html.orig echo \"NGINX Server 1 works!\" > index.html ls Example output sh-4.2$ cp index.html index.html.orig sh-4.2$ echo NGINX Server 1 works! > index.html sh-4.2$ ls README.md index.html index.html.orig nginx-start openshift sh-4.2$ Click Topology in left-hand task bar of OpenShift web console. Click the Open URL button on the edge of the deployment icon. This will launch as a new tab or window in your web browser. You should now see the default page for the web server displays the new message: NGINX Server 1 works! In the next section learn about OpenShift pod resiliency.","title":"Check deployment Status"},{"location":"labguide/deployHttpServer/","text":"Deploy a containerized application Using the OpenShift web console you just opened in the Getting Started section , use the steps below to deploy an application . For this lab, the application is a web server that is running in a container running the NGINX image. NGINX is a free and open-source web server. You can learn more about NGINX on Wikipedia and here . In the top-left of the OpenShift web console, locate the Administrator/Developer toggle button. You will use this toggle frequently over the course of the hands-on lab to cycle between Administrator and Developer perspectives within the OCP cluster. Select the Developer perspective. If not already selected, click the Project pull down menu and select the Project name created for you. You can find this name in your ITZ reservation e-mail or on the ITZ project page. If not already selected, click the Add tab on the left-hand taskbar of the OpenShift web console. Click the View all samples link on the Getting started resources tile. Click the NGINX tile. Change the Name field from nginx-sample to nginx-server-1 . nginx-server-2 Click Create . Your browser will refresh to the Topology view. Notice the view now shows a NGINX deployment icon. The icon will cycle thru color changes as the container is created and the image is deployed. Wait for the outer circle to turn blue. Once the outer circle is blue, the container can be accessed. Click the Open URL button on the edge of the deployment icon to open the default route created during the deployment. This will launch as a new tab or window in your web browser. Record this! Record the text displayed in the new browser tab/window after you click the Open URL button of the NGINX deployment icon. Your NGINX web server is now alive and well. Next, learn to scale and manipulate this containerized HTTP server.","title":"Deploy a containerized application"},{"location":"labguide/deployHttpServer/#deploy-a-containerized-application","text":"Using the OpenShift web console you just opened in the Getting Started section , use the steps below to deploy an application . For this lab, the application is a web server that is running in a container running the NGINX image. NGINX is a free and open-source web server. You can learn more about NGINX on Wikipedia and here . In the top-left of the OpenShift web console, locate the Administrator/Developer toggle button. You will use this toggle frequently over the course of the hands-on lab to cycle between Administrator and Developer perspectives within the OCP cluster. Select the Developer perspective. If not already selected, click the Project pull down menu and select the Project name created for you. You can find this name in your ITZ reservation e-mail or on the ITZ project page. If not already selected, click the Add tab on the left-hand taskbar of the OpenShift web console. Click the View all samples link on the Getting started resources tile. Click the NGINX tile. Change the Name field from nginx-sample to nginx-server-1 . nginx-server-2 Click Create . Your browser will refresh to the Topology view. Notice the view now shows a NGINX deployment icon. The icon will cycle thru color changes as the container is created and the image is deployed. Wait for the outer circle to turn blue. Once the outer circle is blue, the container can be accessed. Click the Open URL button on the edge of the deployment icon to open the default route created during the deployment. This will launch as a new tab or window in your web browser. Record this! Record the text displayed in the new browser tab/window after you click the Open URL button of the NGINX deployment icon. Your NGINX web server is now alive and well. Next, learn to scale and manipulate this containerized HTTP server.","title":"Deploy a containerized application"},{"location":"labguide/deployingMultipleApps/","text":"Deploying multiple instances of an application Earlier, you learned that a pod consists of one or more containers deployed together on one host , and is the smallest compute unit that can be defined, deployed, and managed. You also learned you could scale the number of pods up and down which adds a layer of resiliency. But as noted by the definition of a pod , they are running on a single host. To obtain more resiliency and availability of an application, you can create multiple deployments of an image and load balance traffic to those instances. In this next section, deploy another instance of the NGINX image. Return to the Developer perspective in the OpenShift web console. Click +Add in the left-hand taskbar. Click the View all samples link on the Getting started resources tile. Click the NGINX tile. Change the Name field from nginx-sample to nginx-server-2 . nginx-server-2 Click Create . Click Topology in left-hand taskbar. Click the center of the newly created nginx-server-2 deployment. Click the Resources tab. Click the name of the running Pod to display more information. Click the Terminal tab. Next, change the content of the default page displayed when the NGINX web server is accessed like you did earlier with the first server. This will allow you to easily tell which NGINX deployment you are accessing. Click inside the Terminal window (black box with a prompt like sh-4.2$ ). Issue the following commands in the Terminal to modify the web server's default page. You will first create a backup copy of the original file in case you want to revert back to it later. cp index.html index.html.orig echo \"NGINX Server 2 works!\" > index.html ls Example output sh-4.2$ cp index.html index.html.orig sh-4.2$ echo NGINX Server 1 works! > index.html sh-4.2$ ls README.md index.html index.html.orig nginx-start openshift sh-4.2$ Click Topology in left-hand task bar of OpenShift web console. Click the Open URL button on the edge of the nginx-server-2 deployment icon. This will launch as a new tab or window in your web browser. You should now see the default page for the web server displays the new message: NGINX Server 2 works! In the next section you will create a route to load balance network traffic between the two NGINX web servers.","title":"Deploying Multiple Apps"},{"location":"labguide/deployingMultipleApps/#deploying-multiple-instances-of-an-application","text":"Earlier, you learned that a pod consists of one or more containers deployed together on one host , and is the smallest compute unit that can be defined, deployed, and managed. You also learned you could scale the number of pods up and down which adds a layer of resiliency. But as noted by the definition of a pod , they are running on a single host. To obtain more resiliency and availability of an application, you can create multiple deployments of an image and load balance traffic to those instances. In this next section, deploy another instance of the NGINX image. Return to the Developer perspective in the OpenShift web console. Click +Add in the left-hand taskbar. Click the View all samples link on the Getting started resources tile. Click the NGINX tile. Change the Name field from nginx-sample to nginx-server-2 . nginx-server-2 Click Create . Click Topology in left-hand taskbar. Click the center of the newly created nginx-server-2 deployment. Click the Resources tab. Click the name of the running Pod to display more information. Click the Terminal tab. Next, change the content of the default page displayed when the NGINX web server is accessed like you did earlier with the first server. This will allow you to easily tell which NGINX deployment you are accessing. Click inside the Terminal window (black box with a prompt like sh-4.2$ ). Issue the following commands in the Terminal to modify the web server's default page. You will first create a backup copy of the original file in case you want to revert back to it later. cp index.html index.html.orig echo \"NGINX Server 2 works!\" > index.html ls Example output sh-4.2$ cp index.html index.html.orig sh-4.2$ echo NGINX Server 1 works! > index.html sh-4.2$ ls README.md index.html index.html.orig nginx-start openshift sh-4.2$ Click Topology in left-hand task bar of OpenShift web console. Click the Open URL button on the edge of the nginx-server-2 deployment icon. This will launch as a new tab or window in your web browser. You should now see the default page for the web server displays the new message: NGINX Server 2 works! In the next section you will create a route to load balance network traffic between the two NGINX web servers.","title":"Deploying multiple instances of an application"},{"location":"labguide/gettingStarted/","text":"Reserving a Cluster From a web browser, log in to the ITZ at: https://www.ibm.com/it-infrastructure/services/ceccportal/catalog If this is your first visit to the ITZ, you will first need to agree to the terms and conditions before accessing the environment. From the Catalog tab, perform a search for Red Hat OpenShift and wait for the results to filter. Select the POWER8 LPAR bundle by clicking the blue arrow icon of the tile, then wait for the browser to load the configuration page. You will now be asked to provide the ITZ with System Details on how you want the environment to be configured. Select the I BM POWER8 LPAR Bundle you wish to use for the lab. At the time of publishing, that would be the OCP 4.8 pre-install configuration, as shown on the right. If a more recent release of OpenShift is available to you at the time of conducting this lab, you can opt to use the latest release instead. However, be aware that minor changes to the user interface or functionality may arise compared to the instructions provided in this lab guide. Set the Quantity equal to 1 and then click the Add To Cart button. Note Deployments of OpenShift on Power through the ITZ are pre-configured in terms of their sizing. By default, CPU, memory, and number of instances provided per deployment are fixed. This simplifies the provisioning process in the majority of circumstances (particularly for simple demonstration purposes such as these). However, there may be occasions where you will require a more robust environment \u2014 either for your own training or for a client demonstration. If you require a custom configuration, select the Request Custom Configuration link as shown. Otherwise, there is no configuration required on your part at this stage. We will explore more configuration options in the second half of this lab. Next you will configure the OpenShift cluster size and reservation period. Click the checkbox for your OCP image request. Project Name is set to your own preference. Used For is set to Self Education . Note Reserve only as much time as you need to complete this lab. You will need an estimate 60 to 90 minutes from start to finish. However, you can safely reserve several days of time if you feel you might benefit from it. When satisfied, click Reserve Project . After configuring the environment (the other variables not mentioned in the previous steps can be left as their default variables), you will be prompted with the following screen. MISSING image Click OK to dismiss. Pay special attention to the Date and Time your OCP on PowerVS environment is scheduled for. If you access the Project Kit too early, you\u2019ll only find unresponsive URLs and missing credentials as the cluster is still provisioning. Wait until an email arrives confirming that your environment is active (which will be sent shortly after your scheduled time slot) before trying to connect to the OpenShift cluster. Accessing the ITZ environment Clicking the Project Kit URL will open a new page for the Project Kit , shown below. This page contains all the details you\u2019ll need to know in order to connect with the OpenShift v4.X cluster. Under the Offering Information header (or click P roject Information from the tabs) is the Connection URL for your OpenShift cluster. Use this URL to access the cluster. Just below the Connection URL, look for the Account and Password fields for the Console Credentials. Record these . Additional details about your environment are summarized in the headers below. Youcan use this information to work programmatically with the OpenShift cluster \u2014 if, for example, you wanted to interact via APIs or an SSH console. Open a new browser tab or window and connect to the OpenShift cluster using the URL from Step 1 and the credentials from Step 2 . Warning Depending on your browser, you may be presented with a warning similar to the one shown here. Ignore the warning. If you are using Safari, click Visit This Website button (as shown) to bypass the warning. You may be asked to enter your MacOS password to make the necessary Certificate Trust Settings changes. Note Some users have been prompted to enter the MacOS password twice. Authenticate again if/when instructed to do. When the OpenShift dashboard fully loads, you\u2019ll be ready to advance. Your Web browser will be directed to the OpenShift Container Platform login page. From the two options for login (kube:admin or htpasswd), select the second htpasswd button. Enter the credentials provided to you on the Project Kit page for authentication (Step 2 above). Username is cecuser Password is the string supplied to you on the Project Kit. Click Log In when ready and you will be directed to the OpenShift Container Platform web console. Congratulations \u2014 the OCP v4.X cluster is now up and running. You\u2019re ready to get to work. Important Use the accompanying lab guide to complete this course, and remember to record when prompted (with screenshots or in a text log) if asked to do so. You\u2019ll need these logs to pass the certification test. Refer to the Certification section of this document for instructions on how to receive credit for completing this lab. Good luck!","title":"Getting Started"},{"location":"labguide/gettingStarted/#reserving-a-cluster","text":"From a web browser, log in to the ITZ at: https://www.ibm.com/it-infrastructure/services/ceccportal/catalog If this is your first visit to the ITZ, you will first need to agree to the terms and conditions before accessing the environment. From the Catalog tab, perform a search for Red Hat OpenShift and wait for the results to filter. Select the POWER8 LPAR bundle by clicking the blue arrow icon of the tile, then wait for the browser to load the configuration page. You will now be asked to provide the ITZ with System Details on how you want the environment to be configured. Select the I BM POWER8 LPAR Bundle you wish to use for the lab. At the time of publishing, that would be the OCP 4.8 pre-install configuration, as shown on the right. If a more recent release of OpenShift is available to you at the time of conducting this lab, you can opt to use the latest release instead. However, be aware that minor changes to the user interface or functionality may arise compared to the instructions provided in this lab guide. Set the Quantity equal to 1 and then click the Add To Cart button. Note Deployments of OpenShift on Power through the ITZ are pre-configured in terms of their sizing. By default, CPU, memory, and number of instances provided per deployment are fixed. This simplifies the provisioning process in the majority of circumstances (particularly for simple demonstration purposes such as these). However, there may be occasions where you will require a more robust environment \u2014 either for your own training or for a client demonstration. If you require a custom configuration, select the Request Custom Configuration link as shown. Otherwise, there is no configuration required on your part at this stage. We will explore more configuration options in the second half of this lab. Next you will configure the OpenShift cluster size and reservation period. Click the checkbox for your OCP image request. Project Name is set to your own preference. Used For is set to Self Education . Note Reserve only as much time as you need to complete this lab. You will need an estimate 60 to 90 minutes from start to finish. However, you can safely reserve several days of time if you feel you might benefit from it. When satisfied, click Reserve Project . After configuring the environment (the other variables not mentioned in the previous steps can be left as their default variables), you will be prompted with the following screen. MISSING image Click OK to dismiss. Pay special attention to the Date and Time your OCP on PowerVS environment is scheduled for. If you access the Project Kit too early, you\u2019ll only find unresponsive URLs and missing credentials as the cluster is still provisioning. Wait until an email arrives confirming that your environment is active (which will be sent shortly after your scheduled time slot) before trying to connect to the OpenShift cluster.","title":"Reserving a Cluster"},{"location":"labguide/gettingStarted/#accessing-the-itz-environment","text":"Clicking the Project Kit URL will open a new page for the Project Kit , shown below. This page contains all the details you\u2019ll need to know in order to connect with the OpenShift v4.X cluster. Under the Offering Information header (or click P roject Information from the tabs) is the Connection URL for your OpenShift cluster. Use this URL to access the cluster. Just below the Connection URL, look for the Account and Password fields for the Console Credentials. Record these . Additional details about your environment are summarized in the headers below. Youcan use this information to work programmatically with the OpenShift cluster \u2014 if, for example, you wanted to interact via APIs or an SSH console. Open a new browser tab or window and connect to the OpenShift cluster using the URL from Step 1 and the credentials from Step 2 . Warning Depending on your browser, you may be presented with a warning similar to the one shown here. Ignore the warning. If you are using Safari, click Visit This Website button (as shown) to bypass the warning. You may be asked to enter your MacOS password to make the necessary Certificate Trust Settings changes. Note Some users have been prompted to enter the MacOS password twice. Authenticate again if/when instructed to do. When the OpenShift dashboard fully loads, you\u2019ll be ready to advance. Your Web browser will be directed to the OpenShift Container Platform login page. From the two options for login (kube:admin or htpasswd), select the second htpasswd button. Enter the credentials provided to you on the Project Kit page for authentication (Step 2 above). Username is cecuser Password is the string supplied to you on the Project Kit. Click Log In when ready and you will be directed to the OpenShift Container Platform web console. Congratulations \u2014 the OCP v4.X cluster is now up and running. You\u2019re ready to get to work. Important Use the accompanying lab guide to complete this course, and remember to record when prompted (with screenshots or in a text log) if asked to do so. You\u2019ll need these logs to pass the certification test. Refer to the Certification section of this document for instructions on how to receive credit for completing this lab. Good luck!","title":"Accessing the ITZ environment"},{"location":"labguide/scalingDeployments/","text":"Scaling deployments In this section, scale the NGINX deployment to two pods and then back down to one. You will use both the the Developer and Administrator perspectives in the OpenShift web console. From the Topology page, select the center of the deployment icon to once again display the side bar containing the deployment details. Click the Resources tab. From the Actions drop-down menu at the top-right of the page, click Edit Pod count . Increase the pod count to 2 by clicking the + button. Click Save . OpenShift will now start an additional pod using the same NGINX container image. The OpenShift web console will be updated dynamically as this process takes place. Verify that the second pod has been started by viewing the Pods section of the Deployment Resources tab. While the pod count could be scaled back down using the above process and changing the pod count from 2 to 1, lets explore how to do this using the Administrator perspective of the OpenShift web console. Click the Developer perspective pull down menu and click Administrator . Click the Workloads menu item in the left-hand taskbar. Click Deployments in the sub-menu under Workloads . Verify your project name is still selected at the top of the page next to the Project label. If it is not, click the current Project name to open the projects pulldown menu and select your Project name. Click the nginx-server-1 deployment in the list of Deployments . From the Details tab, scale down the pod count to 1 by clicking the down arrow next to the pod count circle. Observe how the pod count circle changes. OpenShift immediately beings the process of scaling down the number of pods from 2 to 1. Before proceeding wait for the pod count to equal 1 and the outer ring returns to solid blue. Do you know the difference between deleting a pod and scaling down the number of pods? When you delete a pod, you terminate the pod thus removing it from any additional network access. But by scaling down a deployment, the deployment remains active as resources and network access to the remaining pod(s) are still active.","title":"Scaling Deployments"},{"location":"labguide/scalingDeployments/#scaling-deployments","text":"In this section, scale the NGINX deployment to two pods and then back down to one. You will use both the the Developer and Administrator perspectives in the OpenShift web console. From the Topology page, select the center of the deployment icon to once again display the side bar containing the deployment details. Click the Resources tab. From the Actions drop-down menu at the top-right of the page, click Edit Pod count . Increase the pod count to 2 by clicking the + button. Click Save . OpenShift will now start an additional pod using the same NGINX container image. The OpenShift web console will be updated dynamically as this process takes place. Verify that the second pod has been started by viewing the Pods section of the Deployment Resources tab. While the pod count could be scaled back down using the above process and changing the pod count from 2 to 1, lets explore how to do this using the Administrator perspective of the OpenShift web console. Click the Developer perspective pull down menu and click Administrator . Click the Workloads menu item in the left-hand taskbar. Click Deployments in the sub-menu under Workloads . Verify your project name is still selected at the top of the page next to the Project label. If it is not, click the current Project name to open the projects pulldown menu and select your Project name. Click the nginx-server-1 deployment in the list of Deployments . From the Details tab, scale down the pod count to 1 by clicking the down arrow next to the pod count circle. Observe how the pod count circle changes. OpenShift immediately beings the process of scaling down the number of pods from 2 to 1. Before proceeding wait for the pod count to equal 1 and the outer ring returns to solid blue. Do you know the difference between deleting a pod and scaling down the number of pods? When you delete a pod, you terminate the pod thus removing it from any additional network access. But by scaling down a deployment, the deployment remains active as resources and network access to the remaining pod(s) are still active.","title":"Scaling deployments"},{"location":"labguide/testingLoadBalancing/","text":"Testing load balancing Now that the route has been created to the two NGINX web servers, you will test the load balancing capabilities of the OpenShift platform by demonstrating how traffic can be distributed across our two containerized web servers. To test the load balancer distribution, we will create an automated script to create a bunch of requests. In this part of the demonstration, you will use the IBM Cloud Shell. If you are not familiar with IBM Cloud Shell, you can learn about it here . In the IBM Cloud Portal, with the demonstration account selected ( 2435442 - ITZ - Satellite ), click the IBM Cloud Shell icon. The IBM Cloud Shell will open in a new browser tab or window. It may take a few seconds for the shell to initialize. Copy and paste the script below into the IBM Cloud Shell. NEED TO MODIFY THIS TO PULL THE ROUTE!!!! and change text below the script for i in 1 2 3 4 5 6 7 8 9 10 11 12 do wget -q http://<URL_of_the_demo-route> -O index.test grep works index.test done Sample output NEED SAMPLE OUTPUT here Remember to substitute the demo-route URL with the one you recorded in Step 9 of Balancing network traffic . Take note of how the application routing is balanced equally (50:50) between nginx-server-1 and nginx-server-2 according to the route definition created earlier! Record this! Record the script's output. How many times is NGINX Server 1 works! and NGINX Server 2 works! printed to the screen?","title":"Testing Load Balancing"},{"location":"labguide/testingLoadBalancing/#testing-load-balancing","text":"Now that the route has been created to the two NGINX web servers, you will test the load balancing capabilities of the OpenShift platform by demonstrating how traffic can be distributed across our two containerized web servers. To test the load balancer distribution, we will create an automated script to create a bunch of requests. In this part of the demonstration, you will use the IBM Cloud Shell. If you are not familiar with IBM Cloud Shell, you can learn about it here . In the IBM Cloud Portal, with the demonstration account selected ( 2435442 - ITZ - Satellite ), click the IBM Cloud Shell icon. The IBM Cloud Shell will open in a new browser tab or window. It may take a few seconds for the shell to initialize. Copy and paste the script below into the IBM Cloud Shell. NEED TO MODIFY THIS TO PULL THE ROUTE!!!! and change text below the script for i in 1 2 3 4 5 6 7 8 9 10 11 12 do wget -q http://<URL_of_the_demo-route> -O index.test grep works index.test done Sample output NEED SAMPLE OUTPUT here Remember to substitute the demo-route URL with the one you recorded in Step 9 of Balancing network traffic . Take note of how the application routing is balanced equally (50:50) between nginx-server-1 and nginx-server-2 according to the route definition created earlier! Record this! Record the script's output. How many times is NGINX Server 1 works! and NGINX Server 2 works! printed to the screen?","title":"Testing load balancing"},{"location":"labguide/testingResiliency/","text":"Testing resiliency In the previous section, you discovered that the pod restart policy for your deployment was set to Always Restart . In this section we will test the resiliency of the deployment and its policies. Return to the pod details page: click the center of the deployment icon on the Topology view of the web console. Click the pod name link To simulate a pod failure, terminate the pod. From the Actions menu, click Delete Pod . Note In the next step, you will confirm the deletion. When you do so, the OpenShift web console will reload with a view of all pods. To better view the deletion and the restart policy in action, immediately after confirming the deletion, click Topology in the left-hand taskbar and watch the NGINX deployment icon. Confirm the action by clicking Delete . You should notice the deployment icon change from a solid blue outer ring to a segmented black and light blue ring. Wait for the pod to restart (single blue outer ring). Return to the Pod Details tab. Observe the name of the pod. Does it match the previous Pod\u2019s ID? In the next section learn about scaling OpenShift containers.","title":"Testing Resiliency"},{"location":"labguide/testingResiliency/#testing-resiliency","text":"In the previous section, you discovered that the pod restart policy for your deployment was set to Always Restart . In this section we will test the resiliency of the deployment and its policies. Return to the pod details page: click the center of the deployment icon on the Topology view of the web console. Click the pod name link To simulate a pod failure, terminate the pod. From the Actions menu, click Delete Pod . Note In the next step, you will confirm the deletion. When you do so, the OpenShift web console will reload with a view of all pods. To better view the deletion and the restart policy in action, immediately after confirming the deletion, click Topology in the left-hand taskbar and watch the NGINX deployment icon. Confirm the action by clicking Delete . You should notice the deployment icon change from a solid blue outer ring to a segmented black and light blue ring. Wait for the pod to restart (single blue outer ring). Return to the Pod Details tab. Observe the name of the pod. Does it match the previous Pod\u2019s ID? In the next section learn about scaling OpenShift containers.","title":"Testing resiliency"}]}